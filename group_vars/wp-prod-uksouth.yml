---

# Some options, this should be accessible via survey

install_trend: "no"
install_siem_agent: "no"
bootstrap_database_add_user: "no"
bootstrap_database_create_schema: "no"
bootstrap_database_indexes: "no"
configure_application_gateway: "no"
configure_dns_zone: "no"
initial_deploy: "no"
run_update: "no"

# Application vars

app:
  name: "wp-prod-uks" # this can contain characters such as -, don't get too creative though
  shortname: "wpproduks" # all lower-case, all one word
  env: "prod" # 
  working_folder: "/wsdocker"
  url: "www.whitespaceplatform.com"

dnszone: "{{ app.name }}-{{ location }}.internal"

raw_hash: "{{ app.name | hash('sha1') }}" # this creates a hash based on the name of the application
the_hash: "{{ raw_hash[:5] }}" # lets shorten it down

templates:
  docker_compose: "docker-compose.yml.j2"
  sync_gateway: "sync_gateway.json.j2"
  update_script: "update.sh.j2"
  index_html: "index.html.j2"

couchbase:
  version: "5.5.3" # version of couchbase to install
  username: "admin"  # admin username
  password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32393439356539663338663266323162323535356164656638663861623162613164636439653763
          3135346165343731333632373062383736323534316332330a316532343031383364376265656533
          65666139623936353036393534306266333139636139393638373764346363376233333936323462
          3236653637346162350a633136326539626238333032653931353366393033623934363962343434
          30336233373230383236366233396239636166386233653934383338303763613636
  services: "data,index,query,fts,eventing" # these are used to enable services
  bucket: "prodbucket" # name of the bucket to create and use
  admin_port: "18100"
  additional_users:
    - { username: '{{ sync_gateway.user }}', password: '{{ sync_gateway.password }}' }
    - { username: 'n1qluser', password: 'barbadosBORN2look#' }

couchbase_bootstrap:
  rbac_roles: 'bucket_admin[{{couchbase.bucket}}],bucket_full_access[{{couchbase.bucket}}],views_admin[{{couchbase.bucket}}],views_reader[{{couchbase.bucket}}],data_reader[{{couchbase.bucket}}],data_writer[{{couchbase.bucket}}],data_dcp_reader[{{couchbase.bucket}}],data_backup[{{couchbase.bucket}}],data_monitoring[{{couchbase.bucket}}],fts_admin[{{couchbase.bucket}}],fts_searcher[{{couchbase.bucket}}],query_select[{{couchbase.bucket}}],query_update[{{couchbase.bucket}}],query_insert[{{couchbase.bucket}}],query_delete[{{couchbase.bucket}}],query_manage_index[{{couchbase.bucket}}],replication_target[{{couchbase.bucket}}],analytics_manager[{{couchbase.bucket}}]'
  ctaj: "Content-type:application/json"
  auth: "/cbadmin"

sync_gateway:
  version: "2.1.2" # version of the sync gateway to install
  user: "sync_gateway" # username for the sync gatway, this is the default so should be left as is
  password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          61613966386663393639646136383936633137633432666662666138356337346434353864626335
          6230653238396466643434623663663832363663396666320a623839666238366666653035306236
          30306563373237346163333039343661376161313462623036373366313962373763366236396462
          3131656633303639330a313537343430626436343239383034316637366532663239633930623632
          64663135653631613666633535336338343234353531323038626533393062616133
  admin_port: "18200"

ssl_cert_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          30336364316163663132336661623332333637623935393364346163333630353837366130666132
          6661383036353139616237386364376330353861643263320a643736336563663132613363303832
          39333333646432366465336464663863666633313066326230336635613566663264343261333738
          6364306465636334340a643037626438623963646534303731636135616236396630633161393031
          32643631363463366232323831626165626238613034366239636134643665633036
ssl_cert_name: "whitespace_platform_ssl_cert"
self_signed_cert_name: "self-signed-cert"

containers:
  - "{{ docker.registry_url }}/revapi:{{ app.env }}"
  - "{{ docker.registry_url }}/rebrowse:{{ app.env }}"
  - "{{ docker.registry_url }}/pdf-fragment-service:{{ app.env }}"
  - "{{ docker.registry_url }}/wsnotif:{{ app.env }}"
  - "{{ docker.registry_url }}/doc-router:{{ app.env }}"
  - "{{ docker.registry_url }}/mivapi:{{ app.env }}"
  - "mkodockx/docker-clamav:latest"

docker:
  compose_version: "1.24.0"
  user: "admin-user"
  registry_url: "wsinternalcontainerregistry.azurecr.io"
  registry_user: "79b9cf91-8e83-4ac3-a24e-4fc74f791510"
  registry_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      36303566303261313137363632303432363263623364353631303863616530303234343036386366
      6661323437343032323633326338363630653434323235350a376464346262653333656331343766
      32366430623933336632353334363061353966326630313937363464316336366235613338626161
      3433333334316563340a663838303965383564393939323230326565353639353166646532333333
      39646661326437333234626336646530333464653138613833373338336431643566623634393265
      3637313762613362326339356231326165656435643561616566
  compose_command: "/usr/local/bin/docker-compose up -d --no-deps"
  prune_command: "docker image prune -af"
  compose_path: "/usr/local/bin/docker-compose"

indexes_norep:
  - 'statement=CREATE INDEX idx_base ON {{ couchbase.bucket }} ( type, distinct array c for c in channels end, channels, createdAt, _sync.rev, updatedAt)'
  - 'statement=CREATE INDEX idx_type ON {{ couchbase.bucket }} (type, meta().id )'
  - 'statement=CREATE INDEX idx_parentdocid ON {{ couchbase.bucket }} ( parentDocID ) WHERE not meta().id like "_sync:%"'
  - 'statement=CREATE INDEX idx_rwplacing ON {{ couchbase.bucket }} (`type`, distinct array c for c in channels end,`channels`,`_sync`.`rev`,`createdAt`,`updatedAt`,(`control`.`insuredName`),(`control`.`status`),(`control`.`umr`), (`control`.`limitSummary`),(`control`.`contractType`),(`control`.`leadUnderwriterChannel`),(`control`.`placingBrokerChannel`),`provenance`,`user`,`proposedEndorsementFollowers`) WHERE `type` = "RWPlacing" and not meta().`id` like "_sync:%"'

indexes:
  - 'statement=CREATE INDEX idx_base ON {{ couchbase.bucket }} ( type, distinct array c for c in channels end, channels, createdAt, _sync.rev, updatedAt) WITH { "num_replica":1 }'
  - 'statement=CREATE INDEX idx_parentdocid ON {{ couchbase.bucket }} ( parentDocID ) WHERE not meta().id like "_sync:%" WITH { "num_replica":1 }'
  - 'statement=CREATE INDEX idx_rwplacing ON {{ couchbase.bucket }} (`type`, distinct array c for c in channels end,`channels`,`_sync`.`rev`,`createdAt`,`updatedAt`,(`control`.`insuredName`),(`control`.`status`),(`control`.`umr`), (`control`.`limitSummary`),(`control`.`contractType`),(`control`.`leadUnderwriterChannel`),(`control`.`placingBrokerChannel`),`provenance`,`user`,`proposedEndorsementFollowers`) WHERE `type` = "RWPlacing" and not meta().`id` like "_sync:%" WITH { "num_replica":1 }'
  - 'statement=CREATE INDEX idx_type ON {{ couchbase.bucket }} (type, meta().id ) WITH {"num_replica": 1}'

nginx:
  user: "nginx"
  default_page_dir: "/usr/share/nginx/html"
  default_whereami_page_dir: "/usr/share/nginx/html/whereami"
  default_page_file: "index.html"

nginx_configs:
  - "default.conf"

# Some defaults for Azure
##################################################
resource_group: "{{ app.name }}-rg"
location: "uksouth"

# Tags
##################################################
common_tags:
  "Name": "{{ app.name }}"
  "Application": "{{  app.name }}"
  "Environment": "production"
  "Costcenter": "production"
  "Division": "whitespace platform"
  "Consumer": "robert.taylor@whitespace.co.uk"

# Environmentment Details
##################################################

# virtual network
network:
  name: "{{ app.name }}-vnet"
  cidr_block: "10.20.0.0/23"
  subnets:
    - { name: 'app-sub',    subnet: '10.20.0.0/24' }
    - { name: 'appgw-sub',   subnet: '10.20.1.0/24' }

trusted_ips:
  - "{{ your_public_ip }}/32"  # The IP address of whomever is running Ansible
  - "83.166.165.252/32" # node4 (office ip)
  - "83.244.243.48/28" # whitespace (office ip)
  - "77.111.217.132/32" # n4stack (app manager)
  - "77.111.217.129/32" # n4stack (asa gateway)

# storage account and container
storage:
  name: "{{ app.shortname }}sa"
  type: "Standard_LRS"
  container: "extentions"
  files:
    - "server.sh"
    - "syncGateway.sh"
    - "util.sh"

vmss_couchbase:
  name: "{{ app.name }}-cb"
  short_name: "couch"
  size: "Standard_DS12_v2"
  capacity: "3"
  admin_username: "adminuser"
  key:
    ssh_password_enabled: "no"
    path: "/home/adminuser/.ssh/authorized_keys"
    data: "{{ ssh_key }}"
  subnet_name: "app-sub"
  image:
    offer: "CentOS"
    publisher: "OpenLogic"
    sku: "7.6"
    version: "latest"
  disk:
    managed_disk_type: "Standard_LRS"
    data_disks:
      - lun: "0"
        disk_size_gb: "100"
        caching: "ReadWrite"
        managed_disk_type: "Standard_LRS"
  upgrade_policy: "Automatic"

vmss_syncgateway:
  name: "{{ app.name }}-sg"
  short_name: "sync"
  size: "Standard_DS12_v2"
  capacity: "2"
  admin_username: "adminuser"
  key:
    ssh_password_enabled: "no"
    path: "/home/adminuser/.ssh/authorized_keys"
    data: "{{ ssh_key }}"
  subnet_name: "app-sub"
  subnet_name_agw: "appgw-sub"
  image:
    offer: "CentOS"
    publisher: "OpenLogic"
    sku: "7.6"
    version: "latest"
  disk:
    managed_disk_type: "Standard_LRS"
    data_disks: ""
  upgrade_policy: "Automatic"
  application_gateway:
    sku:
      name: "standard_small"
      tier: "standard"

# Which SSH Key to use? The default should be the one used by AWX
ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2c5jDHGDdEGGIUC7dX9y1iyX2F/csqpvYYnWEZ2knA1whUBMwiAR+XxXTW1zInd3I4R6z/8zv4rXLDPn8LeTc5cV0zFY5BxVmvyeObEojOHC9l+yiHUaATs99eJIMd4ph+bNnfFV0uN0FusWjR1d6yDkhCizMhYcGo9g4QSx+qyi85BMuXelwmM57DTRZRgs6JnvcgkLXHUQD0cFuvGFMMDLrIVR5CUVUb76EULSQ+gSSkMVlyoF0h1M9PxhJR6VTtb3QXQ7EB6w8oO9Ke831YMSoU44BIEeImbDSXkEQdZPck+l4LmWF2Om6qLSsNsIGsexMRMH7qJNTRfFleTboOZf9YeJrvyDJg1j7075oCKEHXYO83ZpBZ5mU4dpJYeClVwMtGUNwK7lyRH0zNXipWS7Pm9WAYX0sdk/zwIdUV4U9eK7BkDLXQorHf5vBey/2W5nadjqbA7krlDUUbIR5l3LANI/vA5w5VGqdMlPsNOGftzjkgWci757km4sAHUj1b819ckrnHIeCTNSbYuAKREiLUAo5B2b8vjyHU1EXP1rLvIXwMtor8c6TJWGxiouDL3fbmLLZ8SmHOVaYEzduJMaFZ/8dSr1yEk35kG40ZBnhPEyUCEJ+MMjmhy/EvCPihoC6iM/xqHBKp+45nvhcZoP/prTQHRqey9Bjc8HweQ== whitespace-awx"
# ssh_key: "{{lookup('file', '~/.ssh/id_rsa.pub') }}"