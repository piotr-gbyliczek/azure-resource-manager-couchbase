---
# tasks file for roles/stack-users

- name: create user groups
  group:
    gid: "{{ item.gid }}"
    name: "{{ item.name }}"
    state: present
  when: item.action == 'create'
  with_items: "{{ grps }}"

- name: create users
  user:
    name: "{{ item.name }}"
    comment: "{{ item.comment }}"
    uid: "{{ item.uid }}"
    group: "{{ item.gid|default(omit) }}"
    groups: "{{ item.gids|default(omit) }}"
    password: "{{ password_hash }}"
    append: yes
    state: present
    update_password: on_create
  when: item.action == 'create' and item.nopasswd is not defined 
  with_items: "{{ usrs }}"
  register: created
  notify: expire_password

- name: create users without passwords
  user:
    name: "{{ item.name }}"
    comment: "{{ item.comment }}"
    uid: "{{ item.uid }}"
    group: "{{ item.gid|default(omit) }}"
    groups: "{{ item.gids|default(omit) }}"
    append: yes
    state: present
  when: item.action == 'create' and item.nopasswd is defined 
  with_items: "{{ usrs }}"
  register: created
  notify: expire_password

- name: delete users
  user:
    name: "{{ item.name }}"
    state: absent
  when: item.action == 'remove' or item.action == 'delete'
  with_items: "{{ usrs }}"

- name: suspend users
  command: /usr/sbin/usermod -e 1 -L "{{ item.name }}"
  when: item.action == 'suspend'
  with_items: "{{ usrs }}"

- name: unsuspend users
  command: /usr/sbin/usermod -e 90 -U "{{ item.name }}"
  when: item.action == 'unsuspend'
  with_items: "{{ usrs }}"
  notify: set_password_expiration
  register: unsuspended

- name: set up authorized keys on accounts which need them
  authorized_key:
    user: "{{ item.name }}"
    state: present
    key: '{{ item.key }}'
  when: item.action == 'create' and item.key is defined
  with_items: "{{ usrs }}"

- name: add users to sudoers file 
  lineinfile: "backup=yes state=present dest=/etc/sudoers line='{{ item.name }}        ALL=(ALL)       NOPASSWD: ALL' validate='visudo -cf %s'"
  when: item.action == 'create' and item.sudo is defined 
  with_items: "{{ usrs }}"

- name: ensure users are not in the sudoers file 
  lineinfile: "backup=yes state=absent dest=/etc/sudoers line='{{ item.name }}        ALL=(ALL)       NOPASSWD: ALL' validate='visudo -cf %s'"
  when: item.sudo is not defined
  with_items: "{{ usrs }}"