map $http_authorization $authtype {
  default $http_authorization;
  "~*^Basic.*" "";
}

server {
  listen 80 default_server;
  server_tokens off;

  listen [::]:80 default_server ipv6only=on;

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl_certificate /etc/nginx/ssl/wssscert.pem;
  ssl_certificate_key /etc/nginx/ssl/wssskey.pem;
	
  client_max_body_size 20M;

  server_tokens off;

  add_header X-Frame-Options  "sameorigin";
  add_header X-XSS-Protection "1; mode=block";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  add_header X-Content-Type-Options "nosniff";
  add_header Referrer-Policy "no-referrer";
  add_header Content-Security-Policy "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';frame-ancestors 'self'; frame-src 'self' blob: https:; img-src 'self' blob: data:; object-src 'self' blob:";


  root /usr/share/nginx/html;
  server_name localhost;

  location /whereami {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
    # Uncomment to enable naxsi on this location
    # include /etc/nginx/naxsi.rules
  }

  location /sync/ {
    proxy_pass http://127.0.0.1:4984/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;

    proxy_pass_header Accept;
    proxy_pass_header Server;
    keepalive_requests 1000;
    keepalive_timeout 360s;
    proxy_read_timeout 360s;
    proxy_cookie_path / /sync/;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;
    # disable basic authentication
    # proxy_set_header Authorization $authtype;
  }

  location /api/ {
    proxy_pass http://localhost:8092/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;

    proxy_read_timeout 600s;
    proxy_pass_header Accept;
    proxy_pass_header Server;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }

  location /pdffragments/ {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' *;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Content-Type,Content-Length,Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Keep-Alive,Host,Referer,User-Agent,Authorization';
      add_header 'Content-Length' 0;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      return 204;
    }

    add_header 'Access-Control-Allow-Origin' *;

    proxy_pass http://localhost:3000/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;

    proxy_pass_header Accept;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }

  location /browser/ {
    rewrite ^/browser/(.*)$ /$1 permanent;
  }

location /mapi/ {
    proxy_pass http://localhost:9092/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_read_timeout 600s;
    proxy_pass_header Accept;
    proxy_pass_header Server;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }
  
  location / {
    proxy_pass http://localhost:9080/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;

    proxy_pass_header Accept;
    proxy_pass_header Server;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }
}

server {

  listen 18100 ssl default_server;
  listen [::]:18100 ssl default_server;

  ssl_certificate /etc/nginx/ssl/wssscert.pem;
  ssl_certificate_key /etc/nginx/ssl/wssskey.pem;

  root /var/www/html;
  server_name _;
  client_max_body_size 10M;

  location /cbadmin/ {
    proxy_pass http://localhost:4985/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;

    proxy_pass_header Accept;
    proxy_pass_header Server;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_redirect ~^/(.+)$ /cbadmin/$1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }

}