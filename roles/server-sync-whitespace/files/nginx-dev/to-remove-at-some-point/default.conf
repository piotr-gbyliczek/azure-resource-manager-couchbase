# You may add here your
# server {
#       ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

map $http_authorization $authtype {
    default $http_authorization;
    "~*^Basic.*" "";
}

# map $scheme $sg_scheme {
#     default $scheme;
#     https http;
#     wss ws;
# }

upstream sync_gateway {
    server 127.0.0.1:4984;
}

server{
    listen 80;
    server_tokens off;

    listen [::]:80 default_server ipv6only=on;

    return 301 https://$host$request_uri;
}

server {
#        listen 80 default_server;
#listen [::]:80 default_server ipv6only=on;

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    client_max_body_size 10M;
    proxy_read_timeout 300s;

#    server_name devukwest.whitespace.co.uk;
    ssl_certificate /etc/nginx/ssl/wssscert.pem;
    ssl_certificate_key /etc/nginx/ssl/wssskey.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1;

    server_tokens off;

    add_header X-Frame-Options  "sameorigin";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    add_header X-Content-Type-Options "nosniff";        
    add_header Referrer-Policy "no-referrer";
    add_header Content-Security-Policy "default-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval';style-src 'self' 'unsafe-inline';frame-ancestors 'self'; frame-src 'self' blob: https:; img-src 'self' blob: data:";

    root /usr/share/nginx/html;
#       index index.html index.htm;

# Make site accessible from http://localhost/
    server_name localhost;

    location / {
# First attempt to serve request as file, then
# as directory, then fall back to displaying a 404.
#        base_url devukwest.whitespace.co.uk
#        return 301 https://$base_url/browser;
#        rewrite ^ /browser break;
        try_files $uri $uri/ =404;
# Uncomment to enable naxsi on this location
# include /etc/nginx/naxsi.rules
    }


#    location /sync/platformdev/_session {
#        limit_except GET {
#            deny all;
#        }
#        proxy_pass http://127.0.0.1:4984/;
#        proxy_http_version 1.1;
#        proxy_set_header Host $host;
#
#        proxy_pass_header Accept;
#        proxy_pass_header Server;
#        keepalive_requests 1000;
#        keepalive_timeout 360s;
#        proxy_read_timeout 360s;
#        proxy_cookie_path / /sync/;
#
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";
#        proxy_cache_bypass $http_upgrade;
#disable basic authentication
#proxy_set_header Authorization $authtype;
#   }

    location /sync/ {
        proxy_pass http://sync_gateway/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;
        keepalive_requests 1000;
        keepalive_timeout 360s;
        proxy_read_timeout 360s;
        proxy_cookie_path / /sync/;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
#disable basic authentication
#proxy_set_header Authorization $authtype;
    }

    location /api/ {
        proxy_pass http://localhost:8092/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }


    location /pdffragments/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' *;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,Content-Length,Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Keep-Alive,Host,Referer,User-Agent,Authorization';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' *;

        proxy_pass http://localhost:3000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    location /browser {
        proxy_pass http://localhost:9080/browser/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    location /digitiser/ {
        proxy_pass http://localhost:9090/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }


    location /tollgate/ {
        proxy_pass http://localhost:8083/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    location /sapi/ {
        proxy_pass http://localhost:9095/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }


}


server {

# SSL configuration
#     #
    listen 18100 ssl default_server;
    listen [::]:18100 ssl default_server;
#
    ssl_certificate /etc/nginx/ssl/wssscert.pem;
    ssl_certificate_key /etc/nginx/ssl/wssskey.pem;
#
#
#

    root /var/www/html;
    server_name _;
    client_max_body_size 10M;
    location /cbadmin/ {
        proxy_pass http://localhost:4985/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_redirect ~^/(.+)$ /cbadmin/$1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    location /tollgateadmin/ {
        proxy_pass http://localhost:18101/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_pass_header Accept;
        proxy_pass_header Server;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 127.0.0.1:5417;

    location / {
        proxy_pass https://login.microsoftonline.com/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_hide_header Expires;
    }
}

server {
    listen 127.0.0.1:5418;

    root /usr/share/nginx/html;

    location / {
        try_files $uri =404;
    }
}
